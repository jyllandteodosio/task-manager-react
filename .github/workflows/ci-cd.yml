# Workflow name
name: Taskaru App Frontend CI

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build_and_push_image:
    runs-on: ubuntu-latest

    steps:
      # Checkout the code from the repository
      - name: Checkout code
        uses: actions/checkout@v4

      # Set up Node.js environment
      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20 # Match the version in your Dockerfile

      # Install dependencies for linting and testing
      - name: Install dependencies
        run: npm ci

      # # Run Linters
      # - name: Run ESLint
      #   run: npm run lint

      # # Run Tests
      # - name: Run Tests
      #   run: npm test

      # Optional: Run security audit
      - name: Run npm audit
        run: npm audit --production
        continue-on-error: true # Set to false if audit failures should fail the job

      # Set up Docker Buildx for building multi-platform images (recommended)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      # Log in to Docker Hub
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      # Build and push the Docker image to Docker Hub
      - name: Build and push Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          file: Dockerfile.production
          push: true
          tags: |
            ${{ secrets.DOCKER_HUB_USERNAME }}/taskaru-frontend:${{ github.sha }}
            ${{ secrets.DOCKER_HUB_USERNAME }}/taskaru-frontend:latest
          cache-from: type=gha
          cache-to: type=gha,mode=max
        env:
          NEXT_PUBLIC_RECAPTCHA_SITE_KEY: ${{ vars.NEXT_PUBLIC_RECAPTCHA_SITE_KEY }}
          NEXT_PUBLIC_API_URL: ${{ vars.NEXT_PUBLIC_API_URL }}

      # Optional: Add a notification step here if needed,
      # e.g., sending a message to Slack or Discord that a new image is ready.
      # - name: Notify Deployment Repo
      #   run: echo "New taskaru-frontend image pushed with tag ${{ github.sha }}. Trigger deployment workflow manually or via webhook."

